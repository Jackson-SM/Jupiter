// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  password  String
  disabled  Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  UserProject UserProject[]
  Workspace   Workspace[]
}

model Workspace {
  id        String   @id @default(uuid())
  title     String
  ownerId   String   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  owner User @relation(fields: [ownerId], references: [id])

  Projects Project[]
}

model Project {
  id          String   @id @default(uuid())
  title       String
  description String
  workspaceId String   @map("workspace_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  workspace Workspace @relation(fields: [workspaceId], references: [id])

  UserProject UserProject[]
}

model UserProject {
  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String @map("user_id")

  project   Project @relation(fields: [projectId], references: [id])
  projectId String  @map("project_id")

  level Int

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@id([ownerId, projectId])
}
